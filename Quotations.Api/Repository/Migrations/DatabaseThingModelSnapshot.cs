// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using Repository.EF;
using System;

namespace Repository.Migrations
{
    [DbContext(typeof(DatabaseSetup))]
    partial class DatabaseThingModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ServiceModel.Author", b =>
                {
                    b.Property<int>("AuthorId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.HasKey("AuthorId");

                    b.ToTable("Author");
                });

            modelBuilder.Entity("ServiceModel.Quote", b =>
                {
                    b.Property<int>("QuoteId")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("AuthorId");

                    b.Property<DateTimeOffset>("CreatedDateTime");

                    b.Property<string>("Quotation");

                    b.Property<string>("SourceInfo");

                    b.Property<int?>("UsersUserId");

                    b.HasKey("QuoteId");

                    b.HasIndex("AuthorId");

                    b.HasIndex("UsersUserId");

                    b.ToTable("Quotes");
                });

            modelBuilder.Entity("ServiceModel.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("UserName");

                    b.HasKey("UserId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("ServiceModel.Quote", b =>
                {
                    b.HasOne("ServiceModel.Author", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId");

                    b.HasOne("ServiceModel.User", "Users")
                        .WithMany()
                        .HasForeignKey("UsersUserId");
                });
#pragma warning restore 612, 618
        }
    }
}
